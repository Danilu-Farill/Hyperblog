ESTE ES MI PRIMER TXT 

SOY GLADIS DANILU Y ESTA ES MI HISTORIA

GLADIS DANILU '29 AÑOS', NACIDA EN ACAPULCO, GRO.

mañana nos enfocaremos en mi vida laboral.


COMO IGNORAR ARCHIVOS PARA QUE ESTOS NO PUEDAN INCLUIRSE NUNCA AL REPOSITORIO DE GIT, SE HACE PORQUE 
VAMOS A QUERER TENER ARCHIVOS DE CONFIGURACIÓN QUE SEAN SOLAMENTE PARA MI MÁQUINA POR EJEMPLO:


VARIABLES DE ENTORNO

SUPONGAMOS QUE ESTAMOS TRABAJANDO CON UNA BASE DE DATOS Y ESA BASE DE DATOS LA VAMOS A TENER 
INSTALADA EN LOCAL Y ESTO PARA QUE PODAMOS ESTAR TRABAJANDO CON UN AMBIENTE DE DESARROLLO, EN ESE CASO
LOS USUARIOS, CONTRASEÑAS Y  CAULQUIER TIPO DE ACCESO VAN A SER DIFERENTES AL DE PRODUCIÓN, 
QUEREMOS TENER EL ARCHIVO ALMACENADO EN NUESTRA MAQUINA PERO QUE ESTE NO SE SUBA POR ALGÚN ERROR AL 
REPOSITORIO YA QUE NO QUEREMOS QUE OTRAS PERSONAS CONOZCAN NUESTRA CONTRASEÑA, MÁS IMPORTANTE QUEREMOS
QUE SEA CONFIGURABLE DE MANERA QUE CUANDO LA APLICACIÓN SE DESPLIEGUE A PRODUCCIÓN, SOLO UNA PERSONA 
TENGA ACCESO A ESAS VARIABLES DE ENTORNO LAS CUALES SERVIRAN PARA CONFIGURAR LA APLICACIÓN Y QUE 
ESTA SE CONECTE CON LA BASE DE DATOS DE PRODUCCIÓN.

PARA PONER ALGUNAS VARIABLES DE CONFIGURACIÓN
ABRIR VISUAL STUDIO CODE Y CREAR UN ARCHIVO NUEVO LLAMADO:

.env 

.env: (NOMBRE BASTANTE ESTANDAR PARA VARIABLES DE ENTORNO), DENTRO VA LA CONTRASEA Y USUARIO, VAMOS
A SUPONER QUE NUESTRA APLICACIÓN SE VA A CONECTAR A UNA BASE DE DATOS MYSQL, UTILIZANDO AMBAS 
VARIABLES. VOLVIENDO A LA CONSOLA GIT CON GIT STATUS ME APAERCE .env Y NO QUIERO POR ALGÚN ERROR 
LLEGAR A COMPROMETER ESE ARCHIVO O DARLE UN COMMIT, ASI QUE VUELVO A VISUAL STUDIO CODE Y VOY A CREAR
UN ARCHIVO:

.gitignore

.gitignore:AQUI ES DONDE DEBO ESPECIFICAR LOS ARCHIVOS O LAS RUTAS QUE QUIERO IGNORAR Y QUE NO 
VAYAN AL REPOSITORIO (SE PONE TODO LO QUE SE VA IGNORAR) SE PONE EL ARCHIVO Y TAMBIÉN SE LE 
PUEDEN INDICAR CARPETAS (NODE EN CASO DE ESTAR TRABAJANDO CON ELLA), AL PONER GIT STATUS YA NO APAERCE
.env SOLO . gitignore PARA GUARDAR O AGREGAR

AHORA SE GUARDA CON git add .gitignore y git commit -m "agregando gitignore"

tip: APARTE DE GIT STATUS (PUEDE SER RIESGOSO Y MOSTRARNOS MÁS INFORMACIÓN DE LO QUE NECESITAMOS) ASI 
QUE ALTERNATIVA MÁS FÁCIL Y MÁS ELEGANTE UNA VEZ A COSTUMBRADA A TRABAJAR CON GIT


git status -s: SOLO NOS MUESTRA LOS NOMBRES DE LOS ARCHIVOS LO QUE APARECE UNA m EN ROJO INDICA LOS
ARCHIVOS QUE FUERON MODIFICADOS, m EN VERDE MODIFICADOS PERO AGREGADOS A ADS Y ?? EN ROJO ES UN 
ARCHIVO CREADO PERO QUE NUNCA A SIDO AGREGA CON ADD (UNA VEZ AGREDADO A ADD) Y OTRA VEZ git status -s
APARECE UN a VERDE QUE INDICA QUE ACABA DE SER AGREGADO


